name: 'Chef InSpec Compliance Scan'

on:
  workflow_dispatch:

jobs:
  inspec-scan-and-upload:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository code (your InSpec profile)
      - name: Checkout InSpec Profile from Repository
        uses: actions/checkout@v4
      
      # Step 2: Run the InSpec scan on the local runner
      - name: Run InSpec Scan
        uses: chef/inspec@v1
        with:
          profile: './ssh-baseline'
          target: 'local://'
          # Use the full JSON reporter for rich data
          reporter: 'cli json'
        
      # Step 3: Store the scan report as a downloadable artifact
      # This is for archival and manual inspection. It runs even if other steps fail.
      - name: Upload InSpec Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: inspec-scan-report
          # The default output file from the action is inspec-report.json
          path: inspec-report.json
      
      # Step 4: Push the scan results to DefectDojo
      # This step will only run if the InSpec scan was successful
      - name: Upload Results to DefectDojo
        uses: defectdojo/defectdojo-action@v1
        with:
          # --- Connection Details (from Secrets) ---
          defectdojo_url: ${{ secrets.DEFECTDOJO_URL }}
          defectdojo_api_key: ${{ secrets.DEFECTDOJO_API_KEY }}
          
          # --- Scan Target Details (customize these) ---
          product_name: 'Infrastructure Scans'
          engagement_name: 'CI SSH Scans'
          
          # --- Scan File Details ---
          scan_type: 'Chef InSpec Scan'
          file_path: 'inspec-report.json'
          
          # --- Optional: Advanced Settings ---
          # This will automatically create the Product and Engagement if they don't exist
          auto_create_context: true
          
          # This will automatically close findings in DefectDojo that are no longer found in this scan
          close_old_findings: true
